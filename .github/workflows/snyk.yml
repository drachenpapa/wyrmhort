name: Snyk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  snyk-scans:
    name: ${{ matrix.id == 'backend-sast' || matrix.id == 'frontend-sast' && 'SAST' || matrix.id == 'backend-sca' || matrix.id == 'frontend-sca' && 'SCA' || matrix.id == 'backend-docker' && 'Container Scan' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Backend SAST
          - id: backend-sast
            component: backend
            scan_type: "SAST"
            working_dir: backend
            setup_action: ./.github/actions/backend-setup
            snyk_cmd: snyk code test --sarif-file-output=snyk-backend-sast.sarif
            sarif_file: snyk-backend-sast.sarif
            step_name: "Scan with SnykCode"

          # Backend SCA
          - id: backend-sca
            component: backend
            scan_type: "SCA"
            working_dir: backend
            setup_action: ./.github/actions/backend-setup
            snyk_cmd: snyk test --file=requirements.txt --sarif-file-output=snyk-backend-sca.sarif
            sarif_file: snyk-backend-sca.sarif
            step_name: "Scan with Snyk Open Source"

          # Backend Docker
          - id: backend-docker
            component: backend
            scan_type: "Container Scan"
            working_dir: backend
            setup_action: ./.github/actions/backend-setup
            snyk_cmd: snyk container test wyrmhort-backend --severity-threshold=medium --sarif-file-output=snyk-docker.sarif
            sarif_file: snyk-docker.sarif
            step_name: "Scan with Snyk Container"

          # Frontend SAST
          - id: frontend-sast
            component: frontend
            scan_type: "SAST"
            working_dir: frontend
            setup_action: ./.github/actions/frontend-setup
            snyk_cmd: snyk code test --sarif-file-output=snyk-frontend-sast.sarif
            sarif_file: snyk-frontend-sast.sarif
            step_name: "Scan with SnykCode"

          # Frontend SCA
          - id: frontend-sca
            component: frontend
            scan_type: "SCA"
            working_dir: frontend
            setup_action: ./.github/actions/frontend-setup
            snyk_cmd: snyk test --file=package.json --sarif-file-output=snyk-frontend-sca.sarif
            sarif_file: snyk-frontend-sca.sarif
            step_name: "Scan with Snyk Open Source"

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ${{ matrix.setup_action }}

      - name: Build Docker image
        if: ${{ matrix.id == 'backend-docker' }}
        run: |
          cd backend
          docker build -t wyrmhort-backend -f Dockerfile .

      - name: Cache npm for Snyk
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: snyk-cli-${{ runner.os }}

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: ${{ matrix.step_name }}
        run: |
          cd ${{ matrix.working_dir }}
          ${{ matrix.snyk_cmd }} || echo "Snyk scan failed or limit reached"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Check SARIF file exists
        id: check_sarif
        run: |
          if [ -f "${{ matrix.sarif_file }}" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload SARIF results
        if: steps.check_sarif.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ matrix.sarif_file }}
