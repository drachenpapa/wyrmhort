name: Snyk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  backend:
    name: Backend Scans
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running backend security scans"
        shell: bash

  backend-snyk-sast:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup backend
        uses: ./.github/actions/backend-setup
      - name: Scan with Snyk Code
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk-backend-sast.sarif
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-backend-sast.sarif

  backend-snyk-sca:
    name: Open Source Scan (SCA)
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup backend
        uses: ./.github/actions/backend-setup
      - name: Scan with Snyk Open Source
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --sarif-file-output=snyk-backend-sca.sarif
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-backend-sca.sarif

  backend-snyk-docker:
    name: Docker Scan
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Create .env file
        run: |
          echo "ALLOWED_EMAIL=${{ secrets.ALLOWED_EMAIL }}" > backend/src/.env
      - name: Create firebase key file
        run: |
          mkdir -p backend/secrets
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > backend/secrets/firebase-key.json
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: docker build -t wyrmhort-backend -f backend/Dockerfile backend
      - name: Snyk Container Scan
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: wyrmhort-backend
          args: --sarif-file-output=snyk-docker.sarif
      - name: Fix sarif file
        run: |
          jq '(.runs[].tool.driver.rules[]?.properties."security-severity") |= (if . == null or . == "null" then "0.0" else . end)' snyk-docker.sarif > fixed.sarif
          mv fixed.sarif snyk-docker.sarif
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-docker.sarif

  frontend:
    name: Frontend Scans
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running frontend security scans"
        shell: bash

  frontend-snyk-sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/frontend-setup
      - name: Snyk Code Scan (Frontend)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk-frontend-sast.sarif
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-frontend-sast.sarif

  frontend-snyk-sca:
    name: Open Source Scan
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/frontend-setup
      - name: Snyk Open Source Scan (Frontend)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --file=frontend/package.json --sarif-file-output=snyk-frontend-sca.sarif
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-frontend-sca.sarif
