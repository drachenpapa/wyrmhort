name: Snyk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  backend:
    name: Backend Scans
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running backend security scans"
        shell: bash

  backend-snyk-sast:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup backend
        uses: ./.github/actions/backend-setup
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Scan with SnykCode
        continue-on-error: true
        run: snyk code test --sarif-file-output=snyk-backend-sast.sarif || echo "Snyk SAST Scan failed or limit reached"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Check SARIF file
        id: check_sarif_sast
        run: |
          if [ -f snyk-backend-sast.sarif ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload results
        if: steps.check_sarif_sast.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-backend-sast.sarif

  backend-snyk-sca:
    name: Software Composition Analysis (SCA)
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup backend
        uses: ./.github/actions/backend-setup
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Scan with Snyk Open Source
        continue-on-error: true
        run: snyk test --file=backend/requirements.txt --sarif-file-output=snyk-backend-sca.sarif || echo "Snyk Scan failed or limit reached"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Check SARIF file
        id: check_sarif_req
        run: |
          if [ -f snyk-backend-sca.sarif ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload results
        if: steps.check_sarif_req.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-backend-sca.sarif

  backend-snyk-docker:
    name: Container Image Scan
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Create environment file
        run: |
          echo "ALLOWED_EMAIL=${{ secrets.ALLOWED_EMAIL }}" > src/.env
      - name: Create firebase key file
        run: |
          mkdir -p secrets
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > secrets/firebase-key.json
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: docker build -t wyrmhort-backend -f Dockerfile backend
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Scan with Snyk Container
        continue-on-error: true
        run: snyk container test wyrmhort-backend --severity-threshold=medium --sarif-file-output=snyk-docker.sarif || echo "Snyk Container Scan failed or limit reached"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Fix sarif file
        run: |
          jq '(.runs[].tool.driver.rules[]?.properties."security-severity") |= (if . == null or . == "null" then "0.0" else . end)' snyk-docker.sarif > fixed.sarif
          mv fixed.sarif snyk-docker.sarif
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-docker.sarif

  frontend:
    name: Frontend Scans
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running frontend security scans"
        shell: bash

  frontend-snyk-sast:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/frontend-setup
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Scan with SnykCode
        continue-on-error: true
        run: snyk code test --sarif-file-output=snyk-frontend-sast.sarif || echo "Snyk SAST Scan failed or limit reached"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Check SARIF file
        id: check_sarif_frontend_sast
        run: |
          if [ -f snyk-frontend-sast.sarif ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload results
        if: steps.check_sarif_frontend_sast.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-frontend-sast.sarif

  frontend-snyk-sca:
    name: Software Composition Analysis (SCA)
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        shell: bash
        working-directory: frontend
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/frontend-setup
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Scan with Snyk Open Source
        continue-on-error: true
        run: snyk test --file=frontend/package.json --sarif-file-output=snyk-frontend-sca.sarif || echo "Snyk SCA Scan failed or limit reached"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Check SARIF file
        id: check_sarif_frontend_sca
        run: |
          if [ -f snyk-frontend-sca.sarif ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload results
        if: steps.check_sarif_frontend_sca.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-frontend-sca.sarif
