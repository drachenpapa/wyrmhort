name: Snyk

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  snyk-scans:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: backend-snyk-sast
            name: BE-SAST (Static Application Security Testing)
            dir: backend
            scan_name: Scan with SnykCode
            snyk_cmd: snyk code test --severity-threshold=medium --sarif-file-output=snyk-backend-sast.sarif || echo "Snyk SAST Scan failed or limit reached"
            sarif_file: snyk-backend-sast.sarif
            category: be-sast
          - id: backend-snyk-sca
            name: BE-SCA (Software Composition Analysis)
            dir: backend
            scan_name: Scan with Snyk Open Source
            snyk_cmd: snyk test --file=requirements.txt --severity-threshold=medium --sarif-file-output=snyk-backend-sca.sarif || echo "Snyk Scan failed or limit reached"
            sarif_file: snyk-backend-sca.sarif
            category: be-sca
          - id: backend-snyk-docker
            name: Container Image Scan
            dir: backend
            scan_name: Scan with Snyk Container
            snyk_cmd: snyk container test wyrmhort-backend --file=Dockerfile --severity-threshold=medium --sarif-file-output=snyk-docker.sarif || echo "Snyk Container Scan failed or limit reached"
            sarif_file: snyk-docker.sarif
            category: be-docker
          - id: frontend-snyk-sast
            name: FE-SAST (Static Application Security Testing)
            dir: frontend
            scan_name: Scan with SnykCode
            snyk_cmd: snyk code test --severity-threshold=medium --sarif-file-output=snyk-frontend-sast.sarif || echo "Snyk SAST Scan failed or limit reached"
            sarif_file: snyk-frontend-sast.sarif
            category: fe-sast
          - id: frontend-snyk-sca
            name: FE-SCA (Software Composition Analysis)
            dir: frontend
            scan_name: Scan with Snyk Open Source
            snyk_cmd: snyk test --file=package.json --severity-threshold=medium --sarif-file-output=snyk-frontend-sca.sarif || echo "Snyk SCA Scan failed or limit reached"
            sarif_file: snyk-frontend-sca.sarif
            category: fe-sca
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.dir }}
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Create secrets
        if: matrix.id == 'backend-snyk-docker'
        run: |
          echo "ALLOWED_EMAIL=${{ secrets.ALLOWED_EMAIL }}" > src/.env
          mkdir -p secrets
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > secrets/firebase-key.json
      - name: Setup Backend
        if: matrix.id == 'backend-snyk-sast' || matrix.id == 'backend-snyk-sca'
        uses: ./.github/actions/backend-setup
      - name: Setup Frontend
        if: matrix.id == 'frontend-snyk-sast' || matrix.id == 'frontend-snyk-sca'
        uses: ./.github/actions/frontend-setup
      - name: Setup Docker
        if: matrix.id == 'backend-snyk-docker'
        uses: docker/setup-buildx-action@v3
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Build Docker image
        if: matrix.id == 'backend-snyk-docker'
        run: docker build -t wyrmhort-backend -f Dockerfile .
      - name: ${{ matrix.scan_name }}
        continue-on-error: true
        run: ${{ matrix.snyk_cmd }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Check SARIF file
        id: check_sarif
        run: |
          if [ -f ${{ matrix.sarif_file }} ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            jq '(.runs[].tool.driver.rules[]?.properties."security-severity") |= (if . == null or . == "null" then "0.0" else . end)' ${{ matrix.sarif_file }} > fixed.sarif
            mv fixed.sarif ${{ matrix.sarif_file }}
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload results
        if: steps.check_sarif.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ matrix.dir }}/${{ matrix.sarif_file }}
          category: ${{ matrix.category }}
