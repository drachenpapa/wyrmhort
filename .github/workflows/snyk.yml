name: Snyk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  snyk-scans:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - id: backend-snyk-sast
            name: Static Application Security Testing (Backend)
            dir: backend
            cmd: snyk code test --sarif-file-output=snyk-backend-sast.sarif || echo "Snyk SAST Scan failed or limit reached"
            setup_action: ./.github/actions/backend-setup
            step_name: Scan with SnykCode
            sarif_file: snyk-backend-sast.sarif
          - id: backend-snyk-sca
            name: Software Composition Analysis (Backend)
            dir: backend
            cmd: snyk test --file=backend/requirements.txt --sarif-file-output=snyk-backend-sca.sarif || echo "Snyk Scan failed or limit reached"
            setup_action: ./.github/actions/backend-setup
            step_name: Scan with Snyk Open Source
            sarif_file: snyk-backend-sca.sarif
          - id: backend-snyk-docker
            name: Container Image Scan
            dir: backend
            cmd: snyk container test wyrmhort-backend --severity-threshold=medium --sarif-file-output=snyk-docker.sarif || echo "Snyk Container Scan failed or limit reached"
            create_secrets: |
              echo "ALLOWED_EMAIL=${{ secrets.ALLOWED_EMAIL }}" > backend/src/.env
              mkdir -p backend/secrets
              echo "${{ secrets.FIREBASE_CREDENTIALS }}" > backend/secrets/firebase-key.json
            setup_action: docker/setup-buildx-action@v3
            step_name: Scan with Snyk Container
            sarif_file: snyk-docker.sarif
          - id: frontend-snyk-sast
            name: Static Application Security Testing (Frontend)
            dir: frontend
            cmd: snyk code test --sarif-file-output=snyk-frontend-sast.sarif || echo "Snyk SAST Scan failed or limit reached"
            setup_action: ./.github/actions/frontend-setup
            step_name: Scan with SnykCode
            sarif_file: snyk-frontend-sast.sarif
          - id: frontend-snyk-sca
            name: Software Composition Analysis (Frontend)
            dir: frontend
            cmd: snyk test --file=frontend/package.json --sarif-file-output=snyk-frontend-sca.sarif || echo "Snyk SCA Scan failed or limit reached"
            setup_action: ./.github/actions/frontend-setup
            step_name: Scan with Snyk Open Source
            sarif_file: snyk-frontend-sca.sarif
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.dir }}
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Create secrets
        if: matrix.id == 'backend-snyk-docker'
        run: ${{ matrix.create_secrets }}
      - name: Setup
        uses: ${{ matrix.setup_action }}
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Build Docker image
        if: matrix.id == 'backend-snyk-docker'
        run: docker build -t wyrmhort-backend -f backend/Dockerfile backend
      - name: ${{ matrix.step_name }}
        continue-on-error: true
        run: ${{ matrix.cmd }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Check SARIF file
        id: check_sarif
        run: |
          if [ -f ${{ matrix.sarif_file }} ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Fix sarif file
        run: |
          jq '(.runs[].tool.driver.rules[]?.properties."security-severity") |= (if . == null or . == "null" then "0.0" else . end)' ${{ matrix.sarif_file }} > fixed.sarif
          mv fixed.sarif ${{ matrix.sarif_file }}
      - name: Upload results
        if: steps.check_sarif.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ matrix.sarif_file }}
